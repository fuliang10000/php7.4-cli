version: '2' #cdocker-compose版本
services: #所有服务集合
  mongo:
    image: mongo:4
    restart: always
    env_file: .env #导入配置变量
    environment:
      MONGO_INITDB_DATABASE: "xhprof"
#      MONGO_INITDB_ROOT_USERNAME: "${MONGODB_USERNAME}"
#      MONGO_INITDB_ROOT_PASSWORD: "${MONGODB_PASSWORD}"
    volumes: #数据卷,挂载目录
      - "./data/mongo:/var/lib/mongo"
    ports:
      - "${MONGODB_PORT}:27017" #宿主机端口:容器端口
    networks:
      - docker-net
  mysql: #官方mysql数据库服务
    image: mysql:5.7 #镜像源
    restart: always #异常退出后重启
    env_file: .env #导入配置变量
    environment: #容器中环境变量
      MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}" #数据库root用户密码
      MYSQL_DATABASE: "${DB_DATABASE}" #新创建数据库名称
      MYSQL_USER: "${DB_USERNAME}" #数据库用户名
      MYSQL_PASSWORD: "${DB_PASSWORD}" #数据库密码
    volumes: #数据卷,挂载目录
      - "./data/mysql:/var/lib/mysql" #mysql数据库数据文件存放目录;宿主机目录:容器目录
    ports: #与宿主进的端口映射
      - "${DB_PORT}:3306" #宿主机端口:容器端口
  redis: #官方redis服务
    build: ./docker/redis
    restart: always #异常退出后重启
    env_file: .env #导入配置变量
    environment: #容器中环境变量
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
    volumes:
      - ./data/redis:/var/lib/redis #redis数据文件存放目录
      - ./docker/redis/conf/redis.conf:/usr/local/etc/redis/redis.conf
    command: > #设置redis启动密码
      --requirepass "${REDIS_PASSWORD}"
    ports:
      - "${REDIS_PORT}:6379"
  #tool: #工具容器(包含:composer,npm,cnpm,git,php,node...)
  #  build: ./docker/tool
  #  depends_on:
  #    - mysql
  #    - redis
  #  volumes: #挂载php配置项
  #    - ".:/home/www"
  #    - "../../starlink:/var/www/starlink" #代码目录
  #    - "./docker/tool/php/php-fpm.conf:/etc/php-fpm.conf"
  #    - "./docker/tool/php/www.conf:/etc/php-fpm.d/www.conf"
  #    - "./docker/tool/php/php.ini:/usr/local/etc/php/php.ini"
  #    - "./docker/tool/php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini"
  #  links:
  #    - mysql:db
  #    - redis:redis
  #  entrypoint: #挂起容器不退出
  #    tail -f /etc/passwd
  php: #官方php服务
    build: ./docker/php
  #  depends_on:
  #    - tool
    restart: always
    volumes:
      - "../../starlink:/var/www/starlink" #代码目录
      - "./docker/php/ini/php.ini-development:/usr/local/etc/php/php.ini" #php配置文件
      - "./docker/php/ini/www.conf:/usr/local/etc/php-fpm.d/www.conf" # php-fpm配置文件
      - "./docker/php/ext:/usr/lib/php/ext" # 扩展
    links:
      - mysql:db
      - redis:redis
    networks:
      - docker-net
  php74: #官方php服务
    build: ./docker/php74
    restart: always
    ports:
      - "9001:9001"
    volumes:
      - "../../starlink:/var/www/" #代码目录
      - "./docker/php74/ini/php.ini-development:/usr/local/etc/php74/php.ini" #php配置文件
    stdin_open: true
    tty: true
    networks:
      - docker-net
  nginx: #官方nginx服务器服务
    image: nginx:1.15
    depends_on:
      - php
    restart: always
    volumes:
      - "../../starlink:/var/www/starlink" #代码目录
      - "./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf"
      - "./docker/nginx/vhost:/etc/nginx/conf.d/vhost"
      - "./docker/nginx/logs:/data/logs"
    ports:
      - "80:80"
    links:
      - php:php-fpm
    networks:
      - docker-net
#  #elasticsearch集群
#  es-master:
#    image: elasticsearch:8.1.0
#    container_name: es-master
#    restart: always
#    volumes:
#      - "./docker/elasticsearch/master/data:/var/lib/elasticsearch/data:rw"
#      - "./docker/elasticsearch/master/conf/elasticsearch.yml:/var/lib/elasticsearch/config/elasticsearch.yml"
#      - "./docker/elasticsearch/master/logs:/var/lib/elasticsearch/logs:rw"
#    environment:
#      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#      #表示单节点
#      - discovery.type=single-node
#    ports:
#      - "9200:9200"
#      - "9300:9300"
#  es-node1:
#    image: elasticsearch:8.1.0
#    container_name: es-node1
#    restart: always
#    volumes:
#      - "./docker/elasticsearch/node1/data:/var/lib/elasticsearch/data:rw"
#      - "./docker/elasticsearch/node1/conf/elasticsearch.yml:/var/lib/elasticsearch/config/elasticsearch.yml"
#      - "./docker/elasticsearch/node1/logs:/var/lib/elasticsearch/logs:rw"
#  es-node2:
#    image: elasticsearch:8.1.0
#    container_name: es-node2
#    restart: always
#    volumes:
#      - "./docker/elasticsearch/node2/data:/var/lib/elasticsearch/data:rw"
#      - "./docker/elasticsearch/node2/conf/elasticsearch.yml:/var/lib/elasticsearch/config/elasticsearch.yml"
#      - "./docker/elasticsearch/node2/logs:/var/lib/elasticsearch/logs:rw"
  es-head:
    image: tobias74/elasticsearch-head:6
    container_name: es-head
    restart: always
    ports:
      - "9100:9100"
    networks:
      - docker-net
networks:
  docker-net:
    external: true